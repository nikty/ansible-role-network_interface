---
- name: Create the network configuration file for bond devices
  template:
    src: "ifupdown_interface_bond.j2"
    dest: "{{ network_interface_ifupdown_net_path }}/{{ network_interface_file_prefix }}{{ item.device }}{{ network_interface_file_postfix }}"
  loop: "{{ network_interface['bonds'] }}"
  register: p
  notify: network_interface__handler_restart_networking

# - name: Create the network configuration file for slave in the bond devices
#   template:
#     src: "bond_slave_{{ ansible_os_family }}.j2"
#     dest: "{{ net_path }}/{{ network_interface_file_prefix }}{{ item.1 }}{{ network_interface_file_postfix }}"
#   with_subelements:
#     - "{{ network_bond_interfaces }}"
#     - interfaces
#   register: bond_port_result
#   notify: network_interface__handler_restart_networking
#   when: >-
#     not ansible_os_family == "Debian"

# - name: Make sure the bonding module is loaded
#   modprobe:
#     name: bonding
#     state: present
#   when: bond_result is changed
#   notify: restart networking

# - name: Make the bonding module persistent
#   become: true
#   lineinfile:
#     line: 'bonding'
#     dest: /etc/modules
#     insertafter: EOF
#   when:
#     - network_modprobe_persist
#   notify: restart networking

- name: Save changed bonding interfaces
  set_fact:
    _network_interface_changed_bonds: >
      {{ p.results | default([])
           | selectattr('changed')
           | map(attribute='item.device')
           | list }}

- debug:
    var: _network_interface_changed_bonds
