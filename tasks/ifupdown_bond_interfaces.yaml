---
- name: Create the network configuration file for slave in the bond devices
  template:
    src: "bond_slave_{{ ansible_os_family }}.j2"
    dest: "{{ net_path }}/{{ network_interface_file_prefix }}{{ item.1 }}{{ network_interface_file_postfix }}"
  with_subelements:
    - "{{ network_bond_interfaces }}"
    - interfaces
  register: bond_port_result
  notify: network_interface__handler_restart_networking
  when: >-
    not ansible_os_family == "Debian"

- name: Create the network configuration file for bond devices
  template:
    #src: "bond_{{ ansible_os_family }}.j2"
    src: interface_bond_Debian.j2
    dest: "{{ net_path }}/{{ network_interface_file_prefix }}{{ item.device }}{{ network_interface_file_postfix }}"
  loop: "{{ network_bond_interfaces }}"
  when:
    - item.present | default(True)
  register: bond_result
  notify: network_interface__handler_restart_networking

# - name: Make sure the bonding module is loaded
#   modprobe:
#     name: bonding
#     state: present
#   when: bond_result is changed
#   notify: restart networking

# - name: Make the bonding module persistent
#   become: true
#   lineinfile:
#     line: 'bonding'
#     dest: /etc/modules
#     insertafter: EOF
#   when:
#     - network_modprobe_persist
#   notify: restart networking

- name: Save changed bonding interfaces
  set_fact:
    bond_interfaces_changed: >
      {{ bond_result.results | default([])
           | selectattr('changed')
           | map(attribute='item.device')
           | list }}

- debug: var=bond_interfaces_changed
