---
- name: Create the network configuration file for bridge devices
  template:
    src: "ifupdown_interface_bridge.j2"
    dest: "{{ network_interface_ifupdown_net_path }}/{{ network_interface_file_prefix }}{{ item.device }}{{ network_interface_file_postfix }}"
  loop: "{{ network_interface['bridges'] | default([]) }}"
  register: p
  notify: network_interface__handler_restart_networking

- name: Save changed bridge interfaces
  set_fact:
    _network_interface_changed_bridges: >
      {{ p.results | default([])
           | selectattr('changed')
           | map(attribute='item.device')
           | list }}

- debug:
    var: _network_interface_changed_bridges
  
# - name: Create the network configuration file for port on the bridge devices
#   template:
#     src: "bridge_port_{{ ansible_os_family }}.j2"
#     dest: "{{ net_path }}/{{ network_interface_file_prefix }}{{ item.1 }}{{ network_interface_file_postfix }}"
#   with_subelements:
#     - '{{ network_bridge_interfaces }}'
#     - interfaces
#   when:
#     - not ansible_os_family == "Debian"
#   register: bridge_port_result
#   notify: network_interface__handler_restart_networking
