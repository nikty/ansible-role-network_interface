---
- name: Test configuring ethernet interface with static IPv4 and auto gateway
  hosts: all
  vars:
    test_iface_name: veth0
    test_ip_address: 192.0.2.2/24
    auto_gateway: 192.0.2.1

  become: yes
  
  tasks:

    - set_fact:
        network_interface: "{{ network_interface | combine(_network_interface) }}"
      vars:
        _network_interface:
          ethernets:
            - device: "{{ test_iface_name }}"
              addresses:
                - "{{ test_ip_address }}"
              gateway4: "auto"

    - include_tasks: helpers/set_test_variables.yaml

    - name: Test configuring static ipv4 with auto gateway
      import_role:
        name: network_interface

    - name: debug pause after role has run
      include_tasks: helpers/debug_pause.yaml

    - name: Remove default route
      include_tasks: helpers/manage_route.yaml
      vars:
        dst: 0.0.0.0/0
        state: absent
    
    - include_tasks: helpers/flush_handlers.yaml

    - name: Compare templated file
      include_tasks: helpers/test_file_contents.yaml
      vars:
        file: "{{ network_interface_ifupdown_net_path }}/{{ network_interface_file_prefix }}{{ test_iface_name }}"
        regexp: |-
          ^#[^\n]*
          \s*auto veth0\s*
          \s*iface veth0 inet static\s*
          \s*address 192.0.2.2/24\s*
          \s*gateway 192.0.2.1\s*$
      when: >-
        network_interface_configuration_backend == 'ifupdown'
        and not network_interface_single_configuration_file | bool

    - name: Compare templated file in single configuration file mode
      include_tasks: helpers/test_file_contents.yaml
      vars:
        file: "/etc/network/interfaces"
        regexp: |-
          ^# Ansible managed: .*
          {% if network_interface_implicit_loopback %}
          \s*auto lo\s*
          \s*iface lo inet loopback\s*
          {% endif %}
          \s*auto veth0\s*
          \s*iface veth0 inet static\s*
          \s*address 192.0.2.2/24\s*
          \s*gateway 192.0.2.1\s*$
      when: >-
        network_interface_configuration_backend == 'ifupdown'
        and network_interface_single_configuration_file | bool

    - name: Start interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up
        
    - name: Test interface is up
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up

    - name: Test interface has IP address
      include_tasks: tasks/assert_interface_has_ip_address.yaml
      vars:
        addresses:
          - "{{ test_ip_address }}"
        iface: "{{ test_iface_name }}"

    - name: Test default gateway is set
      include_tasks: tasks/test_route.yaml
      vars:
        dst: 0.0.0.0/0
        gateway: "{{ auto_gateway }}"

    - name: Stop interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down

    - name: Assert interface is down
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down

