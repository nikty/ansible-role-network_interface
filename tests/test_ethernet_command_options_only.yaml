---
- hosts: all
  vars:
    test_iface_name: veth0
    test_option_1: "post-up echo 'post-up first' > /tmp/opt1.txt || true"
    test_option_2: |-
      post-up echo 'post-up second \
      continued' > /tmp/opt2.txt || true
    test_option_3: "post-down echo 'post-down third' > /tmp/opt3.txt || true"
    test_option_4: "post-up false || true"

  become: yes

  post_tasks:
    - name: Clean temp files
      file:
        path: "/tmp/opt{{ item }}.txt"
        state: absent
      loop: [ 1, 2, 3 ]

  tasks:

    - set_fact:
        network_interface: "{{ network_interface | combine(_network_interface) }}"
      vars:
        _network_interface:
          ethernets:
            - device: "{{ test_iface_name }}"
              backend:
                ifupdown:
                  command_options:
                    - "{{ test_option_1 }}"
                    - "{{ test_option_2 }}"
                    - "{{ test_option_3 }}"
                    - "{{ test_option_4 }}"


    - include_tasks: helpers/set_test_variables.yaml

    - import_role:
        name: network_interface

    - include_tasks: helpers/flush_handlers.yaml
      
    - include_tasks: helpers/debug_pause.yaml

    - include_tasks: helpers/test_file_contents.yaml
      vars:
        file: "{{ network_interface_ifupdown_net_path }}/{{ network_interface_file_prefix }}{{ test_iface_name }}{{ network_interface_file_postfix }}"
        regexp: |-
          #[^\n]*
          \s*auto veth0\s*
          \s*iface veth0 inet manual\s*
          {% for opt in [ test_option_1, test_option_2, test_option_3, test_option_4 ] %}
          \s*{{ opt | regex_escape() }}\s*
          {% endfor %}
      when: >-
        network_interface_configuration_backend == 'ifupdown'
        and not network_interface_single_configuration_file

    - name: Start interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up
        
    - name: Test interface is up
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up

    - name: Test command options
      command: cat /tmp/opt1.txt
      register: p
      failed_when: p.stdout != "post-up first"

    - command: cat /tmp/opt2.txt
      register: p
      failed_when: p.stdout != "post-up second continued"
      

    - name: Stop interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down

    - name: Assert interface is down
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down

    - name: Test post-down command option
      command: cat /tmp/opt3.txt
      register: p
      failed_when: p.stdout != "post-down third"

