---

- import_playbook: ../../shared/converge.yaml
  
- name: Test configuring ethernet interface with static IPv4
  hosts: all
  vars:
    test_iface_name: "{{ (ansible_system == 'Linux') | ternary('veth0', 'TODO') }}"
    test_ip_address: 192.0.2.2/24
    test_ip_gateway4: 192.0.2.1

    network_ether_interfaces:
      - device: "{{ test_iface_name }}"
        addresses:
          - "{{ test_ip_address }}"
        gateway4: "{{ test_ip_gateway4 }}"
        #network_restart_interfaces: "{{ test_restart_interfaces }}"

  become: yes
  tasks:

    - name: "Running test [001]"
      debug: msg="[001]"

    - include_tasks: helpers/set_test_variables.yaml
      
    - name: Test configuring static ipv4 with default gateway
      import_role:
        name: network_interface

    - name: Remove default route
      include_tasks: helpers/manage_route.yaml
      vars:
        dst: 0.0.0.0/0
        state: absent
      
    - include_tasks: helpers/flush_handlers.yaml

    - name: debug pause after role has run
      include_tasks: helpers/debug_pause.yaml

    - include_tasks: helpers/test_file_contents.yaml
      vars:
        file: "{{ network_interface_ifupdown_net_path }}/{{ network_interface_file_prefix }}{{ test_iface_name }}{{ network_interface_file_postfix }}"
        regexp: '\s*auto {{ test_iface_name }}\s*\n\s*iface {{ test_iface_name }} inet static\s*\n\s*address {{ test_ip_address | regex_escape()}}\s*\n\s*gateway {{ test_ip_gateway4 | regex_escape() }}\s*$'
      when: >-
        network_interface_configuration_backend == 'ifupdown'
        and not network_interface_single_configuration_file | bool

    # - name: Compare templated file
    #   include_tasks: helpers/compare_lines.yaml
    #   vars:
    #     compare_lines_from_file: "{{ net_path }}/{{ network_interface_file_prefix }}{{ test_iface_name }}{{ network_interface_file_postfix }}"
    #     compare_lines_to: |
    #       auto {{ test_iface_name }}  
    #       iface {{ test_iface_name }} inet static
    #       address {{ test_ip_address }}
    #       gateway {{ test_ip_gateway4 }}
    #   when: ansible_distribution == "Debian"

    - name: Start interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up
      when: not network_restart_interfaces
        
    - name: Test interface is up
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: up

    - name: Test interface has IP address
      include_tasks: tasks/assert_interface_has_ip_address.yaml
      vars:
        addresses:
          - "{{ test_ip_address }}"
        iface: "{{ test_iface_name }}"

    - name: Test default gateway is set
      include_tasks: tasks/test_route.yaml
      vars:
        dst: 0.0.0.0/0
        gateway: "{{ test_ip_gateway4 }}"
        
    - name: Stop interface
      include_tasks: tasks/system_interface_control.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down

    - name: Assert interface is down
      include_tasks: tasks/test_interface_state.yaml
      vars:
        interface: "{{ test_iface_name }}"
        state: down
