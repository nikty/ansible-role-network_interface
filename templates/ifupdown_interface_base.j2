{% from "ifupdown_macros.j2" import interface_definition with context %}
{% if not network_interface_single_configuration_file %}
# {{ ansible_managed }}

{% endif %}
{#
# In case there are multiple interface stanzas, any additional options,
# for example "bonding" options, are not duplicated in every stanza.
# Instead, default family is selected, and options are set only in interface definition
# with that family.
#
# Example: default family is 'inet'.
#
#       allow-hotplug eth1
#
#       iface eth1 inet static
#            address 192.168.1.2/24
#            gateway 192.168.1.1
#            up /bin/true
#            hwaddress 00:11:22:33:44:55
#
#       iface eth1 inet6 static
#            address fec0:0:0:1::2/64
#            gateway fec0:0:0:1::1
#}
{% block interface_selection %}
{{ item.backend.ifupdown.selection | default('auto') }} {{ item.device }}
{% endblock %}
{% block interfaces %}
{% set ns = namespace(set_default = True) %}
{%   if item.addresses is defined and item.addresses | ansible.utils.ipv4 %}
{%     set ipv4_addresses = item.addresses | ansible.utils.ipv4 %}
{%     if not network_interface_ifupdown_separate_stanzas
          or type == 'bridge' %}{# "man bridge-utils-interfaces" #}
{{ interface_definition('inet', 'static', type, item, default=ns.set_default) }}
{%       set ns.set_default = False %}
{%     else %}
{%       for ip in ipv4_addresses %}
{%         set config = item.copy() %}
{%         set _ = config.update({ 'addresses': [ ip ]}) %}
{{ interface_definition('inet', 'static', type, config, default=ns.set_default) }}
{%         set ns.set_default = False %}
{%       endfor %}
{%     endif %}
{%   endif %}
{%   if item.dhcp4 is defined and item.dhcp4 %}
{{ interface_definition('inet', 'dhcp', type, item, default=ns.set_default) }}
{%     set ns.set_default = False %}
{%   endif %}
{%   if item.addresses is defined and item.addresses | ansible.utils.ipv6 %}
{%     set ipv6_addresses = item.addresses | ansible.utils.ipv6 %}
{%     if not network_interface_ifupdown_separate_stanzas
          or type == 'bridge' %}{# "man bridge-utils-interfaces" #}
{{ interface_definition('inet6', 'static', type, item, default=ns.set_default) }}
{%       set ns.set_default = False %}
{%     else %}
{%       for ip in ipv6_addresses %}
{%         set config = item.copy() %}
{%         set _ = config.update({ 'addresses': [ ip ]}) %}
{{ interface_definition('inet6', 'static', type, config, default=ns.set_default) }}
{%         set ns.set_default = False %}
{%       endfor %}
{%     endif %}
{%   endif %}
{# {{ interface_definition('inet6', 'static', type, item, default=ns.set_default) }} #}
{%   if ns.set_default == True %}
{{ interface_definition('inet', 'manual', type, item, default=ns.set_default) }}
{%     set ns.set_default = False %}
{%   endif %}
{% endblock %}
